import { Component } from 'react';
import './index.less';
interface Props {
    data: DataProps;
    locationInfo?: any;
    appCode: string;
    scrollContainer: any;
    emptyDataVisible?: boolean;
}
interface DataProps {
    dataSource: Array<ItemProps>;
    basicAttribute: BasicAttribute;
}
declare type RelationStyle = 0 | 1 | 2;
interface BasicAttribute {
    color: string;
    activeLineStyle: any;
    stickyStyle: any;
    activeStyle: any;
    relationStyle: RelationStyle;
    monitor?: IMonitor;
    saleTipText?: string;
    priceType?: number;
}
interface ItemProps {
    name: string;
    recommendType: number;
    recommendCode: IKeyValue;
    filter: number;
    subtitle: string;
    sort: number;
}
interface StateProps {
    activeIndex: number;
    listData: Array<any>;
    hasMore: boolean;
    recordRequest: any;
    loading: boolean;
    jingdianSelected: any;
    filterShopSelected: any;
    themeData: Array<ThemeItemProps>;
    categoryList: any;
    currentDict: any;
    navBarHeight: number;
}
interface ThemeItemProps {
    name: string;
    value: string | number;
}
declare class MasonryLayout extends Component<Props> {
    state: StateProps;
    static defaultProps: {
        locationInfo: {
            addressComponent: {
                city: string;
            };
            location: {
                lat: number;
                lng: number;
            };
        };
        appCode: string;
        emptyDataVisible: boolean;
        attr: {
            name: string;
        };
    };
    ThemeComponent: any;
    swiperRef: any;
    masonryWrap: any;
    tabsEl: any;
    filterVisible: number;
    type: number;
    code: string;
    sort: number;
    componentDidMount(): Promise<void>;
    getNavBarHeight(): void;
    scroll(): void;
    getThemeData(): Promise<void>;
    loadingDelayClone(): void;
    initState(index: number, isTop?: boolean): void;
    setTabsTop(): void;
    tabsChange(key: string): void;
    onIndexChange(index: any): void;
    loadMore(): Promise<void>;
    filterShopChange(filter: any): Promise<void>;
    filterChange(filter?: {}): Promise<void>;
    autoScrollCenter(selectedEl: any, themeWrapEl: any): void;
    themeSelected(v: any): void;
    render(): JSX.Element;
}
export default MasonryLayout;
