"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireDefault(require("react"));
var _common = require("../../utils/common");
var _commonLib = require("@boluome/common-lib");
var _antdMobileV = require("antd-mobile-v5");
var _fun = require("../../utils/fun");
var _const = require("../../utils/const");
require("./index.css");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, "throw" === context.method) { if (delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method)) return ContinueSentinel; context.method = "throw", context.arg = new TypeError("The iterator does not provide a 'throw' method"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
var defaultOwner = [{
  type: 'default',
  plateNumber: '查违章、查年检',
  descprition: '及时掌握驾驶情况',
  categores: [{
    name: '违章查询',
    orderType: '添加车辆',
    isCompleted: 0
  }, {
    name: '年检代办',
    orderType: '添加车辆',
    isCompleted: 0
  }, {
    name: '最新估值',
    orderType: '添加车辆',
    isCompleted: 0
  }]
}];
var Owner = /*#__PURE__*/function (_React$Component) {
  _inheritsLoose(Owner, _React$Component);
  function Owner() {
    var _this;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this.state = {
      ownerData: defaultOwner
    };
    return _this;
  }
  var _proto = Owner.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.getOwnerData();
  };
  _proto.getOwnerData = /*#__PURE__*/function () {
    var _getOwnerData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
      var appCode, userId, res, data;
      return _regeneratorRuntime().wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              appCode = this.props.appCode;
              userId = (0, _commonLib.getStore)('customerUserId', 'session');
              _context.next = 4;
              return (0, _fun.get)({
                appCode: appCode,
                url: '/api/chezhupindao/v1/cars',
                data: {
                  userId: userId
                }
              });
            case 4:
              res = _context.sent;
              data = defaultOwner;
              if (res.code === 0) {
                data = [].concat(res.data || [], defaultOwner);
              }
              this.setState({
                ownerData: data
              });
            case 8:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));
    function getOwnerData() {
      return _getOwnerData.apply(this, arguments);
    }
    return getOwnerData;
  }();
  _proto.delOwnerInfo = /*#__PURE__*/function () {
    var _delOwnerInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id, plateNumber) {
      var _ref, basicAttribute, _ref2, _ref2$monitor, monitor, userId, url, data, type;
      return _regeneratorRuntime().wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              _ref = this.props.data || {}, basicAttribute = _ref.basicAttribute;
              _ref2 = basicAttribute || {}, _ref2$monitor = _ref2.monitor, monitor = _ref2$monitor === void 0 ? {} : _ref2$monitor;
              (0, _common.baiduHmt)(_extends({}, monitor, {
                name: id
              }));
              userId = (0, _commonLib.getStore)('customerUserId', 'session');
              url = "/api/chezhupindao/v1/car/" + id;
              data = {
                userId: userId,
                plateNumber: plateNumber
              };
              type = 'DELETE';
              (0, _fun.send)({
                appCode: 'blm',
                url: url,
                data: data,
                type: type
              });
            case 8:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));
    function delOwnerInfo(_x, _x2) {
      return _delOwnerInfo.apply(this, arguments);
    }
    return delOwnerInfo;
  }() // 跳转违章和车估前要获取数据塞到缓存里
  ;
  _proto.skipAfterGetInfo =
  /*#__PURE__*/
  function () {
    var _skipAfterGetInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_ref3) {
      var orderType, carId, search, appCode, userId, userPhone, res, scenesPath, domainName;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              orderType = _ref3.orderType, carId = _ref3.carId;
              search = location.search;
              appCode = this.props.appCode;
              userId = (0, _commonLib.getStore)('customerUserId', 'session');
              userPhone = (0, _commonLib.getStore)('userPhone', 'session');
              _context3.next = 7;
              return (0, _fun.get)({
                appCode: appCode,
                url: '/api/chezhupindao/v1/link/info',
                data: {
                  userId: userId,
                  userPhone: userPhone,
                  orderType: orderType,
                  carId: carId
                }
              });
            case 7:
              res = _context3.sent;
              if (res.code === 0) {
                scenesPath = '';
                domainName = this.skipPageAfter(orderType);
                if (orderType === 'weizhang') {
                  scenesPath = '/weizhang/peccancy';
                  (0, _commonLib.setStore)('dataAll', res.data, 'session');
                }
                if (orderType === 'chegu') {
                  scenesPath = '/chegu/result';
                  (0, _commonLib.setStore)('chegu_postData', res.data, 'session');
                }
                location.href = domainName + scenesPath + search;
              }
            case 9:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, this);
    }));
    function skipAfterGetInfo(_x3) {
      return _skipAfterGetInfo.apply(this, arguments);
    }
    return skipAfterGetInfo;
  }();
  _proto.skipPageAfter = function skipPageAfter(name) {
    var _this$props = this.props,
      appCode = _this$props.appCode,
      data = _this$props.data;
    var _ref4 = data || {},
      basicAttribute = _ref4.basicAttribute;
    var _ref5 = basicAttribute || {},
      _ref5$monitor = _ref5.monitor,
      monitor = _ref5$monitor === void 0 ? {} : _ref5$monitor;
    (0, _common.baiduHmt)(_extends({}, monitor, {
      name: name,
      componentName: '车主'
    }));
    return "https://" + ((0, _common.isDev)() ? 'dev-' : '') + appCode + ".otosaas.com";
  };
  _proto.skipScenes = function skipScenes(row, carId) {
    var _ref6 = row || {},
      orderType = _ref6.orderType;
    var domainName = this.skipPageAfter(orderType);
    var search = location.search;
    var scenesPath = orderType;
    // if (isCompleted) {
    if (row.orderType === 'weizhang') {
      this.skipAfterGetInfo({
        orderType: orderType,
        carId: carId
      });
      return;
    }
    if (row.orderType === 'nianjiandaijiao') {
      scenesPath = '/nianjiandaijiao';
    }
    if (row.orderType === 'chegu') {
      this.skipAfterGetInfo({
        orderType: orderType,
        carId: carId
      });
      return;
    }
    // }
    location.href = domainName + scenesPath + search;
  };
  _proto.skipChezhuInfo = function skipChezhuInfo(item) {
    var domainName = this.skipPageAfter(item ? item.plateNumber : '立即添加');
    var search = location.search;
    if (item) {
      var data = JSON.parse(JSON.stringify(item));
      data.plateNumber = data.plateNumber.split('');
      (0, _commonLib.setStore)('addData', data, 'session');
    } else {
      (0, _commonLib.setStore)('addData', '', 'session');
    }
    location.href = domainName + '/automobile/addflate' + search;
  };
  _proto.render = function render() {
    var _this2 = this;
    var _this$state$ownerData = this.state.ownerData,
      ownerData = _this$state$ownerData === void 0 ? [] : _this$state$ownerData;
    var OwnerItem = function OwnerItem(_ref7) {
      var item = _ref7.item,
        _ref7$style = _ref7.style,
        style = _ref7$style === void 0 ? {} : _ref7$style;
      return /*#__PURE__*/_react["default"].createElement("div", {
        className: "owner-wrap",
        style: style
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: "owner-head"
      }, item.plateNumber, item.type !== 'default' ? /*#__PURE__*/_react["default"].createElement("div", {
        className: "owner-icon"
      }, /*#__PURE__*/_react["default"].createElement("img", {
        src: "https://bosscdn.otosaas.com/test/20221102/20221102142308%E7%9F%A9%E5%BD%A2%402x.png?path=0,504,651",
        alt: "",
        onClick: function onClick() {
          return _this2.skipChezhuInfo(item);
        }
      }), /*#__PURE__*/_react["default"].createElement("img", {
        src: "https://bosscdn.otosaas.com/test/20221102/20221102142320%E7%9F%A9%E5%BD%A2%E5%A4%87%E4%BB%BD%2011%402x.png?path=0,504,652",
        alt: "",
        onClick: function onClick() {
          _antdMobileV.Modal.confirm({
            content: '确定删除车辆信息吗',
            onConfirm: function onConfirm() {
              _this2.delOwnerInfo(item.carId, item.plateNumber);
            }
          });
        }
      })) : /*#__PURE__*/_react["default"].createElement("div", {
        className: "owner-button",
        onClick: function onClick() {
          return _this2.skipChezhuInfo();
        }
      }, "\u7ACB\u5373\u6DFB\u52A0")), /*#__PURE__*/_react["default"].createElement("div", {
        className: "owner-desc"
      }, item.descprition), /*#__PURE__*/_react["default"].createElement("div", {
        className: "owner-info"
      }, item.categores.map(function (v, i) {
        return /*#__PURE__*/_react["default"].createElement("div", {
          key: v.orderType + i,
          className: "owner-item",
          onClick: function onClick() {
            return _this2.skipScenes(v, item.carId);
          }
        }, v.name);
      })));
    };
    if (!ownerData.length) return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null);
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: "template-owner"
    }, ownerData.length > 1 ? /*#__PURE__*/_react["default"].createElement(_antdMobileV.Swiper, {
      rubberband: false,
      loop: true,
      style: {
        height: '2.6rem'
      },
      indicatorProps: {
        style: {
          '--dot-color': '#F2B3B8',
          '--active-dot-color': '#F93A4A',
          '--dot-size': '.12rem',
          '--active-dot-size': '.24rem',
          '--dot-border-radius': '50%',
          '--active-dot-border-radius': '.8rem'
        }
      }
    }, ownerData.map(function (item, index) {
      return /*#__PURE__*/_react["default"].createElement(_antdMobileV.Swiper.Item, {
        key: index
      }, /*#__PURE__*/_react["default"].createElement(OwnerItem, {
        item: item
      }));
    })) : /*#__PURE__*/_react["default"].createElement(OwnerItem, {
      item: ownerData[0],
      style: {
        height: '2.24rem',
        paddingBottom: '0'
      }
    }));
  };
  return Owner;
}(_react["default"].Component);
Owner.defaultProps = {
  appCode: _const.defaultAppCode,
  attr: {
    name: '车主'
  }
};
var _default = Owner;
exports["default"] = _default;