"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireWildcard(require("react"));
var _antdMobileV = require("antd-mobile-v5");
var _common = require("../../utils/common");
var _default2 = require("./default");
var _CustomImage = _interopRequireDefault(require("../CustomImage"));
require("./index.css");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
// interface StateProps {
//   navList: Array<Array<ItemProps>>;
// }
var IconSize = {
  1: '0.56rem',
  2: '0.88rem',
  3: '1rem',
  "default": '0.88rem'
};
var ItemWidth = {
  1: '20%',
  2: '16.66%'
};
var BrandGroup = /*#__PURE__*/function (_Component) {
  _inheritsLoose(BrandGroup, _Component);
  function BrandGroup() {
    return _Component.apply(this, arguments) || this;
  }
  var _proto = BrandGroup.prototype;
  // state: StateProps = {
  //   navList: [],
  // };
  // componentDidMount() {
  //   this.iconsMap();
  // }
  // iconsMap() {
  //   const navList: Array<Array<ItemProps>> = [];
  //   const { dataSource } = this.props.data;
  //   dataSource.forEach((item: ItemProps, index: number) => {
  //     const num = Math.floor(index / 10);
  //     if (!navList[num]) {
  //       navList[num] = [];
  //     }
  //     navList[num].push(item);
  //   });
  //   this.setState({
  //     navList,
  //   });
  // }
  _proto.handleClick = function handleClick(config) {
    var onClick = this.props.onClick;
    config.componentName = 'icon';
    (0, _common.globalClick)(config, onClick);
  };
  _proto.render = function render() {
    var _this = this;
    var _ref = this.props.data || {},
      basicAttribute = _ref.basicAttribute,
      _ref$dataSource = _ref.dataSource,
      dataSource = _ref$dataSource === void 0 ? [] : _ref$dataSource;
    var _ref2 = basicAttribute || {},
      relationStyle = _ref2.relationStyle,
      backgroundColor = _ref2.backgroundColor,
      color = _ref2.color,
      monitor = _ref2.monitor,
      rowStyle = _ref2.rowStyle,
      colStyle = _ref2.colStyle,
      visibleName = _ref2.visibleName;
    var rowNumber = {
      1: 5,
      2: 6
    };
    var colNumber = {
      1: 2,
      2: 3
    };
    var total = rowNumber[rowStyle || 1] * colNumber[colStyle || 1];
    var defaultData = rowStyle === 2 ? _default2.defaultDataSource2 : _default2.defaultDataSource;
    var newDataSource = dataSource && dataSource.length ? dataSource : defaultData;
    var navList = [];
    newDataSource.forEach(function (item, index) {
      var num = Math.floor(index / total);
      if (!navList[num]) {
        navList[num] = [];
      }
      navList[num].push(item);
    });
    var IconItem = function IconItem(item, index) {
      var _ref3 = item || {},
        iconLabel = _ref3.iconLabel,
        imgUrl = _ref3.imgUrl,
        name = _ref3.name;
      return /*#__PURE__*/_react["default"].createElement("div", {
        key: index,
        onClick: function onClick() {
          return _this.handleClick(_extends({}, item, monitor || {}));
        },
        className: 'nav-item',
        style: {
          width: ItemWidth[rowStyle || 1]
        }
      }, iconLabel && /*#__PURE__*/_react["default"].createElement("div", {
        className: 'badge'
      }, iconLabel), /*#__PURE__*/_react["default"].createElement(_CustomImage["default"], {
        src: imgUrl,
        alt: "",
        style: {
          width: IconSize[relationStyle || 'default'],
          height: IconSize[relationStyle || 'default']
        }
      }), visibleName !== 2 && /*#__PURE__*/_react["default"].createElement("div", {
        style: {
          color: color
        },
        className: 'nav-item-title'
      }, name));
    };
    if (navList.length <= 0) return /*#__PURE__*/_react["default"].createElement("div", null);
    return /*#__PURE__*/_react["default"].createElement("div", {
      className: "template-nav-warp"
    }, /*#__PURE__*/_react["default"].createElement("div", {
      className: "template-nav-container",
      style: {
        backgroundColor: backgroundColor
      }
    }, navList[1] ? /*#__PURE__*/_react["default"].createElement(_antdMobileV.Swiper, {
      rubberband: false,
      indicatorProps: {
        style: {
          '--dot-color': '#e2e4ea',
          '--active-dot-color': '#F93A4A',
          '--dot-size': '.12rem',
          '--active-dot-size': '.24rem',
          '--dot-border-radius': '50%',
          '--active-dot-border-radius': '.8rem'
        }
      }
    }, navList.map(function (items, index) {
      return /*#__PURE__*/_react["default"].createElement(_antdMobileV.Swiper.Item, {
        key: index
      }, /*#__PURE__*/_react["default"].createElement("div", {
        className: 'nav-carousel'
      }, items.map(function (item, i) {
        return IconItem(item, i);
      })));
    })) : navList[0].map(function (item, i) {
      return IconItem(item, i);
    })));
  };
  return BrandGroup;
}(_react.Component);
BrandGroup.defaultProps = {
  data: {
    basicAttribute: {
      relationStyle: 2
    },
    dataSource: []
  },
  attr: {
    name: 'Icon'
  }
};
var _default = BrandGroup;
exports["default"] = _default;