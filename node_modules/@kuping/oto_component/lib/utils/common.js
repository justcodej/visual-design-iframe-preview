"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attachPropertiesToComponent = attachPropertiesToComponent;
exports.skipMallParam = exports.putParams = exports.isDev = exports.globalClick = exports.getIsTopNavBar = exports["default"] = exports.baiduHmt = void 0;
var _commonLib = require("@boluome/common-lib");
var _customer2 = _interopRequireDefault(require("./customer"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
// 设置成商城首页时 往商城跳需要携带homeUri参数
var skipMallParam = function skipMallParam() {
  var pindaoCode = (0, _commonLib.getStore)('pindaoCode', 'session');
  if (pindaoCode === 'mall') {
    return '&homeUri=' + location.pathname;
  }
  return '';
};
exports.skipMallParam = skipMallParam;
var getIsTopNavBar = function getIsTopNavBar() {
  var is = false;
  var OTO_SAAS = window.OTO_SAAS;
  if (Object.keys(OTO_SAAS).length) {
    if (OTO_SAAS.customer.customize["default"].type === 'banner' && typeof OTO_SAAS.customer.customize["default"].create === 'function') {
      is = true;
    }
  }
  return is;
};
/**
 * @description: 百度检测点击事件
 * @param {*} monitor 是否开启当前点击事件监测
 * @param {*} componentName 组件名称
 * @param {*} name 组件名称(后台自定义)
 * @return {*}
 */
exports.getIsTopNavBar = getIsTopNavBar;
var baiduHmt = function baiduHmt(_ref) {
  var is = _ref.is,
    componentName = _ref.componentName,
    monitorName = _ref.monitorName,
    name = _ref.name;
  var _window = window,
    _hmt = _window._hmt;
  console.log((is ? '开启组件统计' : '未开启组件统计') + ", \u8981\u63A8\u9001\u7684\u4FE1\u606F" + _hmt + componentName + monitorName + name);
  if (!is) return;
  _hmt && _hmt.push(['_trackEvent', componentName, monitorName, name]);
};
exports.baiduHmt = baiduHmt;
var globalClick = function globalClick(config, fn) {
  if (fn === void 0) {
    fn = null;
  }
  if (typeof fn === 'function') {
    fn(config);
    return;
  }
  var _customer = (0, _customer2["default"])(),
    appSkipFn = _customer.appSkipFn;
  var _config$pathUrl = config.pathUrl,
    pathUrl = _config$pathUrl === void 0 ? '' : _config$pathUrl,
    is = config.is,
    componentName = config.componentName,
    monitorName = config.monitorName,
    name = config.name;
  baiduHmt({
    is: is,
    componentName: componentName,
    monitorName: monitorName,
    name: name
  });
  if (!pathUrl || !pathUrl.trim('')) return;
  var symbol = pathUrl.indexOf('?') > -1 ? '&' : '?';
  appSkipFn ? appSkipFn({
    needLogin: 'Y',
    type: 'B',
    url: pathUrl,
    appId: '20201401'
  }) : location.href = "" + pathUrl + symbol + putParams();
};
exports.globalClick = globalClick;
var isDev = function isDev() {
  return /^(localhost|127.0.0.1|test-|dev-|192.168.)/.test(location.hostname);
};
exports.isDev = isDev;
var putParams = function putParams() {
  var pindaoCode = (0, _commonLib.getStore)('pindaoCode', 'session');
  var URLParams = (0, _commonLib.parseQuery)(location.search);
  URLParams.customerUserPhone = URLParams.customerUserPhone || (0, _commonLib.getStore)('wxAuthPhone') || '';
  URLParams.kpScene = '1';
  if (pindaoCode === 'mall') {
    URLParams.homeUri = location.pathname;
  }
  var query = (0, _commonLib.stringifyQuery)(URLParams).replace(/\?/, '');
  return query;
};
exports.putParams = putParams;
function attachPropertiesToComponent(component, properties) {
  var ret = component;
  for (var key in properties) {
    if (properties.hasOwnProperty(key)) {
      ret[key] = properties[key];
    }
  }
  return ret;
}
var _default = {};
exports["default"] = _default;