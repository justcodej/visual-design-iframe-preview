'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _add2 = require('ramda/src/add');

var _add3 = _interopRequireDefault(_add2);

var _gte2 = require('ramda/src/gte');

var _gte3 = _interopRequireDefault(_gte2);

var _divide2 = require('ramda/src/divide');

var _divide3 = _interopRequireDefault(_divide2);

var _multiply2 = require('ramda/src/multiply');

var _multiply3 = _interopRequireDefault(_multiply2);

var _length2 = require('ramda/src/length');

var _length3 = _interopRequireDefault(_length2);

var _replace2 = require('ramda/src/replace');

var _replace3 = _interopRequireDefault(_replace2);

var _indexOf2 = require('ramda/src/indexOf');

var _indexOf3 = _interopRequireDefault(_indexOf2);

var _2 = require('ramda/src/__');

var _3 = _interopRequireDefault(_2);

var _lt2 = require('ramda/src/lt');

var _lt3 = _interopRequireDefault(_lt2);

var _both2 = require('ramda/src/both');

var _both3 = _interopRequireDefault(_both2);

var _always2 = require('ramda/src/always');

var _always3 = _interopRequireDefault(_always2);

var _equals2 = require('ramda/src/equals');

var _equals3 = _interopRequireDefault(_equals2);

var _type2 = require('ramda/src/type');

var _type3 = _interopRequireDefault(_type2);

var _ifElse2 = require('ramda/src/ifElse');

var _ifElse3 = _interopRequireDefault(_ifElse2);

var _compose2 = require('ramda/src/compose');

var _compose3 = _interopRequireDefault(_compose2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// string -> string -> [ string | number ]
exports.default = function (f) {
  return function () {
    var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    return (0, _compose3.default)(format(f), create)(s);
  };
};

// [ string | number ] -> Date


var create = function create(s) {
  return (0, _ifElse3.default)((0, _compose3.default)((0, _equals3.default)('Null'), _type3.default), (0, _always3.default)(new Date()), (0, _always3.default)(new Date((0, _ifElse3.default)((0, _both3.default)((0, _compose3.default)((0, _equals3.default)('String'), _type3.default), (0, _compose3.default)((0, _lt3.default)(_3.default, 0), (0, _indexOf3.default)('T'))), (0, _replace3.default)(/[-]/g, '/'), (0, _ifElse3.default)((0, _both3.default)((0, _compose3.default)((0, _equals3.default)('Number'), _type3.default), (0, _compose3.default)((0, _equals3.default)(10), _length3.default, toString)), (0, _multiply3.default)(1000), (0, _always3.default)(s)))(s))))(s);
};

// string -> date -> [ string | number ]
var format = function format(f) {
  return function (d) {
    switch (f) {
      case 'x':
        return d.getTime();
      case 'X':
        return (0, _divide3.default)(d.getTime(), 1000);
      case 'day':
        return d.getDay();
      case 'date':
        return d.getDate();
      default:
        return stringify(f)(d);
    }
  };
};

// number -> [ number | string ]
var zero = function zero(n) {
  return (0, _ifElse3.default)((0, _gte3.default)(_3.default, 10), (0, _always3.default)(n), (0, _always3.default)('0' + n))(n);
};

// string -> string -> string
var stringify = function stringify(f) {
  return function (d) {
    var year = d.getFullYear();
    var month = (0, _add3.default)(d.getMonth(), 1);
    var day = d.getDate();
    var hour = d.getHours();
    var minute = d.getMinutes();
    var second = d.getSeconds();

    return (0, _ifElse3.default)((0, _compose3.default)((0, _equals3.default)('Null'), _type3.default), (0, _always3.default)(d), (0, _compose3.default)((0, _replace3.default)('YYYY', year), (0, _replace3.default)('MM', zero(month)), (0, _replace3.default)('DD', zero(day)), (0, _replace3.default)('HH', zero(hour)), (0, _replace3.default)('mm', zero(minute)), (0, _replace3.default)('ss', zero(second))))(f);
  };
};