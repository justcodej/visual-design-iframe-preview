import { ComponentClass, MouseEvent } from 'react';
import { KpFileManageContext } from '@/FileManage';
import base from './base';
export interface IFileItemProps {
    listType: number;
    active: boolean;
}
export interface DefaultSidebarProps {
    width?: number;
}
export interface IDataSourceItem {
    id?: number;
    name: string;
    type: number;
    url: string;
    suffix: string;
    parentId: number;
    size?: number;
    createdAt?: string;
    createdBy?: string;
    updatedAt?: string;
    updatedBy?: string;
}
export interface SettingsProps {
    maskClosable: boolean;
    defalutActive: number;
    timeout: number;
    themeColor: string;
    keyboard: boolean;
    sidebar: DefaultSidebarProps;
}
export interface FilemanageContextProps {
    settings: SettingsProps;
    modalLeft?: number;
    onNextPage: () => void;
    onChangeState: (state: Partial<KpFileManageContext>) => void;
    onClose: () => void;
    dataSource: IDataSourceItem[];
    currentSelectedList: IDataSourceItem[];
    headers: any;
    upload: string;
    save: string;
    query: string;
    update: string;
    onFetchFiles: (isNextPage?: boolean) => any;
    onResetFetch: () => void;
    onSearch: () => void;
    searchValue: string;
    activeIndex: number | null;
    markingIndex: number | null;
    beforeUpload: (files: FileList) => boolean;
    multiple: boolean;
    menuVisible: boolean;
    showDraggerUpload: boolean;
}
export interface ModalProps extends base {
    title?: string;
    visible: boolean;
    width?: number | string;
    height?: number | string;
    onClose?: () => void;
}
export interface KpFileManageProps extends base {
    settings?: SettingsProps;
    title?: string;
    visible?: boolean;
    onChange?: (selectedlist: IDataSourceItem[]) => void;
    selectedList?: IDataSourceItem[];
    headers?: any;
    upload: string;
    save: string;
    query: string;
    update: string;
    beforeUpload?: (files: FileList) => boolean;
    multiple?: boolean;
}
export interface BasisLayoutProps extends base {
    title?: string;
}
export interface ModalFilesViewProps extends base {
}
export interface FilesItemProps extends base {
    file?: IDataSourceItem;
    onContextMenu?: (e: MouseEvent, item?: IDataSourceItem, index?: number) => void;
    onBlur?: () => void;
    editedIndex: number | null;
    activeIndex?: number | null;
    index?: number;
}
declare const KpFileManage: ComponentClass<KpFileManageProps>;
export default KpFileManage;
