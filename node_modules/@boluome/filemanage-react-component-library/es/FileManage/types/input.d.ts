import { ComponentClass, CSSProperties, MouseEvent } from 'react';
import base from './base';
export declare type InputSizeTypes = 'default' | 'mini' | undefined;
export declare type BtnSizeTypes = 'large' | 'moddle' | 'small' | undefined;
export declare type UploadFileStatus = 'error' | 'success' | 'done' | 'uploading' | 'removed';
export interface UploadFile<T = any> {
    uid: string;
    size?: number;
    name: string;
    fileName?: string;
    lastModified?: number;
    lastModifiedDate?: Date;
    url?: string;
    status?: UploadFileStatus;
    percent?: number;
    thumbUrl?: string;
    originFileObj?: File;
    response?: T;
    error?: any;
    linkProps?: any;
    type?: string;
    xhr?: T;
    preview?: string;
}
declare type ButtonTypes = 'default' | 'primary';
export interface KpInputProps extends base {
    width?: number | string;
    value?: string;
    onChange?: (value: string) => void;
    placeholder?: string;
    size?: InputSizeTypes;
    onBlur?: () => void;
    autoFocus?: boolean;
    onPressEnter?: () => void;
    onClick?: (e: MouseEvent<HTMLDivElement>) => void;
}
export interface KpUploadPros extends base {
    type?: ButtonTypes;
    style?: CSSProperties;
    multiple?: boolean;
    onChange?: (fileList: FileList) => void;
    beforeUpload?: (file: FileList) => boolean;
}
export interface KpDraggerUploadProps extends base {
    onChange?: (files: FileList) => void;
}
export interface KpButtonProps extends base {
    type?: ButtonTypes;
    style?: CSSProperties;
    className?: string;
    size?: BtnSizeTypes;
    onClick?: (e?: any) => void;
}
declare const KpInput: ComponentClass<KpInputProps>;
export default KpInput;
