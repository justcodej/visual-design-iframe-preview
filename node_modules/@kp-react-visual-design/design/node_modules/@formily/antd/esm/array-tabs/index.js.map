{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/array-tabs/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AACjD,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,MAAM,CAAA;AAElC,OAAO,EACL,QAAQ,EACR,QAAQ,EACR,cAAc,EACd,cAAc,GAEf,MAAM,gBAAgB,CAAA;AAOvB,IAAM,aAAa,GAAiC,QAAQ,CAAC,UAAC,KAAK;IACjE,IAAM,KAAK,GAAG,QAAQ,EAAc,CAAA;IACpC,IAAM,GAAG,GAAG,UAAG,KAAK,CAAC,KAAK,IAAI,UAAU,cAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAE,CAAA;IAC7D,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,UAAC,KAAK;QACvC,OAAA,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAG,KAAK,CAAC,OAAO,cAAI,KAAK,CAAC,KAAK,CAAE,CAAC;IAAzD,CAAyD,CAC1D,CAAA;IACD,IAAI,MAAM,CAAC,MAAM,EAAE;QACjB,OAAO,CACL,oBAAC,KAAK,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAC,cAAc,EAAC,KAAK,EAAE,MAAM,CAAC,MAAM,IAC9D,GAAG,CACE,CACT,CAAA;KACF;IACD,OAAO,oBAAC,QAAQ,QAAE,GAAG,CAAY,CAAA;AACnC,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,IAAM,SAAS,GAAiD,QAAQ,CAC7E,UAAC,KAAK;IACJ,IAAM,KAAK,GAAG,QAAQ,EAAc,CAAA;IACpC,IAAM,MAAM,GAAG,cAAc,EAAE,CAAA;IACzB,IAAA,KAAA,OAA4B,QAAQ,CAAC,OAAO,CAAC,IAAA,EAA5C,SAAS,QAAA,EAAE,YAAY,QAAqB,CAAA;IACnD,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAA;IAC3D,IAAM,UAAU,GAAG,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;IAC/C,IAAM,MAAM,GAAG,UAAC,SAAc,EAAE,IAAsB;;QACpD,IAAI,IAAI,IAAI,KAAK,EAAE;YACjB,IAAM,EAAE,GAAG,UAAU,CAAC,MAAM,CAAA;YAC5B,IAAI,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,KAAK,0CAAE,MAAM,EAAE;gBACxB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;aACjB;iBAAM;gBACL,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;aACvB;YACD,YAAY,CAAC,cAAO,EAAE,CAAE,CAAC,CAAA;SAC1B;aAAM,IAAI,IAAI,IAAI,QAAQ,EAAE;YAC3B,IAAM,KAAK,GAAG,MAAM,CAAC,MAAA,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,0CAAG,CAAC,CAAC,CAAC,CAAA;YACpD,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;gBAClB,YAAY,CAAC,cAAO,KAAK,GAAG,CAAC,CAAE,CAAC,CAAA;aACjC;YACD,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;SACpB;IACH,CAAC,CAAA;IAED,OAAO,CACL,oBAAC,IAAI,eACC,KAAK,IACT,SAAS,EAAE,SAAS,EACpB,QAAQ,EAAE,UAAC,GAAG;YACZ,YAAY,CAAC,GAAG,CAAC,CAAA;QACnB,CAAC,EACD,IAAI,EAAC,eAAe,EACpB,MAAM,EAAE,MAAM,KAEb,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK;QAC3B,IAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;YACvC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;YACrB,CAAC,CAAC,MAAM,CAAC,KAAK,CAAA;QAChB,IAAM,GAAG,GAAG,cAAO,KAAK,CAAE,CAAA;QAC1B,OAAO,CACL,oBAAC,IAAI,CAAC,OAAO,IACX,GAAG,EAAE,GAAG,EACR,WAAW,QACX,QAAQ,EAAE,KAAK,KAAK,CAAC,EACrB,GAAG,EAAE,oBAAC,aAAa,IAAC,KAAK,EAAE,KAAK,GAAI;YAEpC,oBAAC,cAAc,IAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,GAAI,CACjC,CAChB,CAAA;IACH,CAAC,CAAC,CACG,CACR,CAAA;AACH,CAAC,CACF,CAAA;AAED,eAAe,SAAS,CAAA","sourcesContent":["import React, { Fragment, useState } from 'react'\nimport { Tabs, Badge } from 'antd'\nimport { ArrayField } from '@formily/core'\nimport {\n  useField,\n  observer,\n  useFieldSchema,\n  RecursionField,\n  ReactFC,\n} from '@formily/react'\nimport { TabsProps } from 'antd/lib/tabs'\n\ninterface IFeedbackBadgeProps {\n  index: number\n}\n\nconst FeedbackBadge: ReactFC<IFeedbackBadgeProps> = observer((props) => {\n  const field = useField<ArrayField>()\n  const tab = `${field.title || 'Untitled'} ${props.index + 1}`\n  const errors = field.errors.filter((error) =>\n    error.address.includes(`${field.address}.${props.index}`)\n  )\n  if (errors.length) {\n    return (\n      <Badge size=\"small\" className=\"errors-badge\" count={errors.length}>\n        {tab}\n      </Badge>\n    )\n  }\n  return <Fragment>{tab}</Fragment>\n})\n\nexport const ArrayTabs: React.FC<React.PropsWithChildren<TabsProps>> = observer(\n  (props) => {\n    const field = useField<ArrayField>()\n    const schema = useFieldSchema()\n    const [activeKey, setActiveKey] = useState('tab-0')\n    const value = Array.isArray(field.value) ? field.value : []\n    const dataSource = value?.length ? value : [{}]\n    const onEdit = (targetKey: any, type: 'add' | 'remove') => {\n      if (type == 'add') {\n        const id = dataSource.length\n        if (field?.value?.length) {\n          field.push(null)\n        } else {\n          field.push(null, null)\n        }\n        setActiveKey(`tab-${id}`)\n      } else if (type == 'remove') {\n        const index = Number(targetKey.match(/-(\\d+)/)?.[1])\n        if (index - 1 > -1) {\n          setActiveKey(`tab-${index - 1}`)\n        }\n        field.remove(index)\n      }\n    }\n\n    return (\n      <Tabs\n        {...props}\n        activeKey={activeKey}\n        onChange={(key) => {\n          setActiveKey(key)\n        }}\n        type=\"editable-card\"\n        onEdit={onEdit}\n      >\n        {dataSource?.map((item, index) => {\n          const items = Array.isArray(schema.items)\n            ? schema.items[index]\n            : schema.items\n          const key = `tab-${index}`\n          return (\n            <Tabs.TabPane\n              key={key}\n              forceRender\n              closable={index !== 0}\n              tab={<FeedbackBadge index={index} />}\n            >\n              <RecursionField schema={items} name={index} />\n            </Tabs.TabPane>\n          )\n        })}\n      </Tabs>\n    )\n  }\n)\n\nexport default ArrayTabs\n"]}