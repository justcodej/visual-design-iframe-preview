import { isArr, isFn, isEmpty } from '@formily/shared';
import moment from 'moment';
export var momentable = function (value, format) {
    return Array.isArray(value)
        ? value.map(function (val) { return moment(val, format); })
        : value
            ? moment(value, format)
            : value;
};
export var formatMomentValue = function (value, format, placeholder) {
    var formatDate = function (date, format, i) {
        if (i === void 0) { i = 0; }
        if (!date)
            return placeholder;
        if (isArr(format)) {
            var _format = format[i];
            if (isFn(_format)) {
                return _format(date);
            }
            if (isEmpty(_format)) {
                return date;
            }
            return moment(date).format(_format);
        }
        else {
            if (isFn(format)) {
                return format(date);
            }
            if (isEmpty(format)) {
                return date;
            }
            return moment(date).format(format);
        }
    };
    if (isArr(value)) {
        return value.map(function (val, index) {
            return formatDate(val, format, index);
        });
    }
    else {
        return value ? formatDate(value, format) : value || placeholder;
    }
};
//# sourceMappingURL=moment.js.map