{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/form-tab/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Fragment, useMemo } from 'react'\nimport { Tabs, Badge } from 'antd'\nimport { model, markRaw } from '@formily/reactive'\nimport { TabPaneProps, TabsProps } from 'antd/lib/tabs'\nimport {\n  useField,\n  ReactFC,\n  observer,\n  useFieldSchema,\n  RecursionField,\n} from '@formily/react'\nimport { Schema, SchemaKey } from '@formily/json-schema'\nimport cls from 'classnames'\nimport { usePrefixCls } from '../__builtins__'\nexport interface IFormTab {\n  activeKey: string\n  setActiveKey(key: string): void\n}\n\nexport interface IFormTabProps extends TabsProps {\n  formTab?: IFormTab\n}\n\nexport interface IFormTabPaneProps extends TabPaneProps {\n  key: string | number\n}\n\ninterface IFeedbackBadgeProps {\n  name: SchemaKey\n  tab: React.ReactNode\n}\n\ntype ComposedFormTab = React.FC<React.PropsWithChildren<IFormTabProps>> & {\n  TabPane: React.FC<React.PropsWithChildren<IFormTabPaneProps>>\n  createFormTab: (defaultActiveKey?: string) => IFormTab\n}\n\nconst useTabs = () => {\n  const tabsField = useField()\n  const schema = useFieldSchema()\n  const tabs: { name: SchemaKey; props: any; schema: Schema }[] = []\n  schema.mapProperties((schema, name) => {\n    const field = tabsField.query(tabsField.address.concat(name)).take()\n    if (field?.display === 'none' || field?.display === 'hidden') return\n    if (schema['x-component']?.indexOf('TabPane') > -1) {\n      tabs.push({\n        name,\n        props: {\n          key: schema?.['x-component-props']?.key || name,\n          ...schema?.['x-component-props'],\n        },\n        schema,\n      })\n    }\n  })\n  return tabs\n}\n\nconst FeedbackBadge: ReactFC<IFeedbackBadgeProps> = observer((props) => {\n  const field = useField()\n  const errors = field.form.queryFeedbacks({\n    type: 'error',\n    address: `${field.address.concat(props.name)}.*`,\n  })\n  if (errors.length) {\n    return (\n      <Badge size=\"small\" className=\"errors-badge\" count={errors.length}>\n        {props.tab}\n      </Badge>\n    )\n  }\n  return <Fragment>{props.tab}</Fragment>\n})\n\nconst createFormTab = (defaultActiveKey?: string) => {\n  const formTab = model({\n    activeKey: defaultActiveKey,\n    setActiveKey(key: string) {\n      formTab.activeKey = key\n    },\n  })\n  return markRaw(formTab)\n}\n\nexport const FormTab: ComposedFormTab = observer(\n  ({ formTab, ...props }: IFormTabProps) => {\n    const tabs = useTabs()\n    const _formTab = useMemo(() => {\n      return formTab ? formTab : createFormTab()\n    }, [])\n    const prefixCls = usePrefixCls('formily-tab', props)\n    const activeKey = props.activeKey || _formTab?.activeKey\n\n    return (\n      <Tabs\n        {...props}\n        className={cls(prefixCls, props.className)}\n        activeKey={activeKey}\n        onChange={(key) => {\n          props.onChange?.(key)\n          formTab?.setActiveKey?.(key)\n        }}\n      >\n        {tabs.map(({ props, schema, name }, key) => (\n          <Tabs.TabPane\n            key={key}\n            {...props}\n            tab={<FeedbackBadge name={name} tab={props.tab} />}\n            forceRender\n          >\n            <RecursionField schema={schema} name={name} />\n          </Tabs.TabPane>\n        ))}\n      </Tabs>\n    )\n  }\n) as unknown as ComposedFormTab\n\nconst TabPane: React.FC<React.PropsWithChildren<IFormTabPaneProps>> = ({\n  children,\n}) => {\n  return <Fragment>{children}</Fragment>\n}\n\nFormTab.TabPane = TabPane\nFormTab.createFormTab = createFormTab\n\nexport default FormTab\n"]}