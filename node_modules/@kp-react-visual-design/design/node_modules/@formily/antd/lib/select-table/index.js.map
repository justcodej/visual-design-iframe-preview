{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/select-table/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react'\nimport { observer, useFieldSchema, useField, Schema } from '@formily/react'\nimport cls from 'classnames'\nimport { isArr, isBool, isFn } from '@formily/shared'\nimport { Input, Table } from 'antd'\nimport { TableProps, ColumnProps } from 'antd/lib/table'\nimport { SearchProps } from 'antd/lib/input'\nimport { useFilterOptions } from './useFilterOptions'\nimport { useFlatOptions } from './useFlatOptions'\nimport { useSize } from './useSize'\nimport { useTitleAddon } from './useTitleAddon'\nimport { useCheckSlackly, getIndeterminate } from './useCheckSlackly'\nimport { getUISelected, getOutputData } from './utils'\nimport { usePrefixCls } from '../__builtins__'\n\nconst { Search } = Input\n\ntype IFilterOption = boolean | ((option: any, keyword: string) => boolean)\n\ntype IFilterSort = (optionA: any, optionB: any) => number\n\nexport interface ISelectTableColumnProps extends ColumnProps<any> {\n  key: React.ReactText\n}\n\nexport interface ISelectTableProps extends TableProps<any> {\n  mode?: 'multiple' | 'single'\n  dataSource?: any[]\n  optionAsValue?: boolean\n  valueType?: 'all' | 'parent' | 'child' | 'path'\n  showSearch?: boolean\n  searchProps?: SearchProps\n  primaryKey?: string | ((record: any) => string)\n  filterOption?: IFilterOption\n  filterSort?: IFilterSort\n  onSearch?: (keyword: string) => void\n  onChange?: (value: any, options: any) => void\n  value?: any\n}\n\ntype ComposedSelectTable = React.FC<\n  React.PropsWithChildren<ISelectTableProps>\n> & {\n  Column?: React.FC<React.PropsWithChildren<ISelectTableColumnProps>>\n}\n\nconst isColumnComponent = (schema: Schema) => {\n  return schema['x-component']?.indexOf('Column') > -1\n}\n\nconst useColumns = () => {\n  const schema = useFieldSchema()\n  const columns: ISelectTableColumnProps[] = []\n  const validSchema = (\n    schema?.type === 'array' && schema?.items ? schema.items : schema\n  ) as Schema\n\n  validSchema?.mapProperties((schema, name) => {\n    if (isColumnComponent(schema)) {\n      const props = schema?.['x-component-props']\n      columns.push({\n        ...props,\n        title: props?.title || schema?.title,\n        dataIndex: props?.dataIndex || name,\n      })\n    }\n  })\n  return columns\n}\n\nconst addPrimaryKey = (dataSource, rowKey, primaryKey) =>\n  dataSource.map((item) => {\n    const children = isArr(item.children)\n      ? addPrimaryKey(item.children, rowKey, primaryKey)\n      : {}\n    return {\n      ...item,\n      ...children,\n      [primaryKey]: rowKey(item),\n    }\n  })\n\nexport const SelectTable: ComposedSelectTable = observer((props) => {\n  const {\n    mode,\n    dataSource: propsDataSource,\n    optionAsValue,\n    valueType,\n    showSearch,\n    filterOption,\n    filterSort,\n    onSearch,\n    searchProps,\n    className,\n    value,\n    onChange,\n    rowSelection,\n    primaryKey: rowKey,\n    ...otherTableProps\n  } = props\n  const prefixCls = usePrefixCls('formily-select-table', props)\n  const [searchValue, setSearchValue] = useState<string>()\n  const field = useField() as any\n  const loading = isBool(props.loading) ? props.loading : field.loading\n  const disabled = field.disabled\n  const readOnly = field.readOnly\n  const readPretty = field.readPretty\n  const { searchSize, tableSize } = useSize(\n    field.decoratorProps?.size,\n    searchProps?.size,\n    props?.size\n  )\n  const primaryKey = isFn(rowKey) ? '__formily_key__' : rowKey\n  const columns = useColumns()\n\n  // dataSource\n  let dataSource = isArr(propsDataSource) ? propsDataSource : field.dataSource\n  dataSource = isFn(rowKey)\n    ? addPrimaryKey(dataSource, rowKey, primaryKey)\n    : dataSource\n\n  // Filter dataSource By Search\n  const filteredDataSource = useFilterOptions(\n    dataSource,\n    searchValue,\n    filterOption,\n    rowSelection?.checkStrictly\n  )\n\n  // Order dataSource By filterSort\n  const orderedFilteredDataSource = useMemo(() => {\n    if (!filterSort) {\n      return filteredDataSource\n    }\n    return [...filteredDataSource].sort((a, b) => filterSort(a, b))\n  }, [filteredDataSource, filterSort])\n\n  const flatDataSource = useFlatOptions(dataSource)\n  const flatFilteredDataSource = useFlatOptions(filteredDataSource)\n\n  // 分页或异步查询时，dataSource会丢失已选数据，配置optionAsValue则无法获取已选数据，需要进行合并\n  const getWholeDataSource = () => {\n    if (optionAsValue && mode === 'multiple' && value?.length) {\n      const map = new Map()\n      const arr = [...flatDataSource, ...value]\n      arr.forEach((item) => {\n        if (!map.has(item[primaryKey])) {\n          map.set(item[primaryKey], item)\n        }\n      })\n      return [...map.values()]\n    }\n    return flatDataSource\n  }\n\n  // selected keys for Table UI\n  const selected = getUISelected(\n    value,\n    flatDataSource,\n    primaryKey,\n    valueType,\n    optionAsValue,\n    mode,\n    rowSelection?.checkStrictly,\n    rowKey\n  )\n\n  // readPretty Value\n  const readPrettyDataSource = useFilterOptions(\n    orderedFilteredDataSource,\n    selected,\n    (value, item) => value.includes(item[primaryKey])\n  )\n\n  const onInnerSearch = (searchText) => {\n    const formatted = (searchText || '').trim()\n    setSearchValue(searchText)\n    onSearch?.(formatted)\n  }\n\n  const onInnerChange = (selectedRowKeys: any[]) => {\n    if (readOnly) {\n      return\n    }\n    // 筛选后onChange默认的records数据不完整，此处需使用完整数据过滤\n    const wholeRecords = getWholeDataSource().filter((item) =>\n      selectedRowKeys.includes(item?.[primaryKey])\n    )\n    const { outputValue, outputOptions } = getOutputData(\n      selectedRowKeys,\n      wholeRecords,\n      dataSource,\n      primaryKey,\n      valueType,\n      optionAsValue,\n      mode,\n      rowSelection?.checkStrictly\n    )\n\n    onChange?.(outputValue, outputOptions)\n  }\n\n  const onRowClick = (record) => {\n    if (readPretty || disabled || readOnly || record?.disabled) {\n      return\n    }\n    const selectedRowKey = record?.[primaryKey]\n    const isSelected = selected?.includes(selectedRowKey)\n    let selectedRowKeys = []\n    if (mode === 'single') {\n      selectedRowKeys = [selectedRowKey]\n    } else {\n      if (isSelected) {\n        selectedRowKeys = selected.filter((item) => item !== selectedRowKey)\n      } else {\n        selectedRowKeys = [...selected, selectedRowKey]\n      }\n    }\n    if (rowSelection?.checkStrictly !== false) {\n      onInnerChange(selectedRowKeys)\n    } else {\n      onSlacklyChange(selectedRowKeys)\n    }\n  }\n\n  // TreeData SlacklyChange\n  const onSlacklyChange = (currentSelected: any[]) => {\n    let { selectedRowKeys } = useCheckSlackly(\n      currentSelected,\n      selected,\n      flatDataSource,\n      flatFilteredDataSource,\n      primaryKey,\n      rowSelection?.checkStrictly\n    )\n    onInnerChange(selectedRowKeys)\n  }\n\n  // Table All Checkbox\n  const titleAddon = useTitleAddon(\n    selected,\n    flatDataSource,\n    flatFilteredDataSource,\n    primaryKey,\n    mode,\n    disabled,\n    readOnly,\n    rowSelection?.checkStrictly,\n    onInnerChange\n  )\n\n  // Antd rowSelection type\n  const modeAsType: any = { multiple: 'checkbox', single: 'radio' }?.[mode]\n\n  return (\n    <div className={prefixCls}>\n      {showSearch ? (\n        <Search\n          {...searchProps}\n          className={cls(`${prefixCls}-search`, searchProps?.className)}\n          style={{ width: '100%', ...searchProps?.style }}\n          onSearch={onInnerSearch}\n          onChange={(e) => onInnerSearch(e.target.value)}\n          disabled={disabled}\n          readOnly={readOnly}\n          size={searchSize}\n          loading={loading} // antd\n        />\n      ) : null}\n      <Table\n        {...otherTableProps}\n        className={cls(`${prefixCls}-table`, className)}\n        dataSource={\n          readPretty ? readPrettyDataSource : orderedFilteredDataSource\n        }\n        rowSelection={\n          readPretty\n            ? undefined\n            : ({\n                ...rowSelection,\n                ...titleAddon,\n                getCheckboxProps: (record) => ({\n                  ...(rowSelection?.getCheckboxProps?.(record) as any),\n                  disabled: disabled || record?.disabled,\n                }), // antd\n                ...(rowSelection?.checkStrictly !== false\n                  ? {}\n                  : {\n                      renderCell: (checked, record, index, originNode) => {\n                        return React.cloneElement(\n                          originNode as React.ReactElement,\n                          {\n                            indeterminate: getIndeterminate(\n                              record,\n                              flatDataSource,\n                              selected,\n                              primaryKey\n                            ),\n                          }\n                        )\n                      },\n                    }),\n                selectedRowKeys: selected,\n                onChange:\n                  rowSelection?.checkStrictly !== false\n                    ? onInnerChange\n                    : onSlacklyChange,\n                type: modeAsType,\n                preserveSelectedRowKeys: true,\n                checkStrictly: true,\n              } as any)\n        }\n        columns={props.columns || columns}\n        rowKey={primaryKey}\n        loading={loading}\n        size={tableSize}\n        onRow={(record) => {\n          // antd\n          const onRowResult = otherTableProps.onRow?.(record)\n          return {\n            ...onRowResult,\n            onClick: (e) => {\n              onRowResult?.onClick?.(e)\n              onRowClick(record)\n            },\n          }\n        }}\n      >\n        {''}\n      </Table>\n    </div>\n  )\n})\n\nconst TableColumn: React.FC<\n  React.PropsWithChildren<ISelectTableColumnProps>\n> = () => <></>\n\nSelectTable.Column = TableColumn\n\nSelectTable.defaultProps = {\n  showSearch: false,\n  valueType: 'all',\n  primaryKey: 'key',\n  mode: 'multiple',\n}\n\nexport default SelectTable\n"]}