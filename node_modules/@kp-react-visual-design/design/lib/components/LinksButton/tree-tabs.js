"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _antd = require("antd");

var _columns = _interopRequireDefault(require("./columns"));

var _consts = require("../../consts");

var _TableSearch = _interopRequireDefault(require("../TableSearch"));

var _searchOptions = _interopRequireDefault(require("./search-options"));

var _mapValues = _interopRequireDefault(require("./map-values"));

var _context = _interopRequireDefault(require("./context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var expandable = {
  childrenColumnName: 'list',
  rowExpandable: function rowExpandable() {
    return false;
  }
};

var TreeTabs = function TreeTabs(_ref) {
  var items = _ref.items,
      pid = _ref.pid;

  var _useContext = (0, _react.useContext)(_context.default),
      activeKey = _useContext.activeKey,
      onTabClick = _useContext.onTabClick,
      dataSource = _useContext.dataSource,
      loading = _useContext.loading,
      totalCount = _useContext.totalCount,
      payload = _useContext.payload,
      value = _useContext.value,
      _onChange = _useContext.onChange,
      onChangePayload = _useContext.onChangePayload,
      onSearch = _useContext.onSearch,
      onReset = _useContext.onReset,
      onPaginationChange = _useContext.onPaginationChange;

  var rowSelection = {
    onSelect: function onSelect(record) {
      // 根据接口返回的key去找取，避免字段发生变化
      var url = record[_mapValues.default[activeKey]['key']];
      _onChange === null || _onChange === void 0 ? void 0 : _onChange(url);
    },
    type: 'radio',
    selectedRowKeys: value ? [value] : [],
    hideSelectAll: true
  };
  var newItems = items === null || items === void 0 ? void 0 : items.map(function (item, index) {
    var _mapValues$activeKey;

    return {
      label: item.name,
      key: item.subLinkTab ? item.subLinkTab[0].url : item.url,
      // key: getActiveKey(
      //   items,
      //   pid ? `${pid}.${item.url}` : `${item.url !== '' || item.subLinkTab ? index : item.url}`,
      // ),
      children: item.subLinkTab ? /*#__PURE__*/_react.default.createElement(TreeTabs, {
        items: item.subLinkTab,
        pid: item.subLinkTab ? "".concat(index) : item.url
      }) : item.url ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_TableSearch.default, {
        options: _searchOptions.default[activeKey],
        onChange: onChangePayload,
        onSearch: onSearch,
        onReset: onReset,
        values: payload
      }), /*#__PURE__*/_react.default.createElement(_antd.Table, {
        dataSource: dataSource,
        scroll: _consts.TABLE_SCROLL,
        columns: _columns.default[activeKey],
        expandable: expandable,
        bordered: true,
        rowKey: (_mapValues$activeKey = _mapValues.default[activeKey]) === null || _mapValues$activeKey === void 0 ? void 0 : _mapValues$activeKey['key'],
        rowSelection: rowSelection,
        loading: loading,
        pagination: {
          defaultPageSize: 20,
          total: totalCount,
          onChange: onPaginationChange,
          current: payload === null || payload === void 0 ? void 0 : payload.page
        }
      })) : /*#__PURE__*/_react.default.createElement(_antd.Input.TextArea, {
        rows: 4,
        value: value,
        onChange: function onChange(e) {
          return _onChange === null || _onChange === void 0 ? void 0 : _onChange(e.target.value);
        },
        placeholder: "\u8BF7\u8F93\u5165\u8DF3\u8F6C\u94FE\u63A5"
      })
    };
  });
  return /*#__PURE__*/_react.default.createElement(_antd.Tabs, {
    onTabClick: onTabClick,
    defaultActiveKey: activeKey,
    destroyInactiveTabPane: true,
    items: newItems
  });
};

TreeTabs.defaultProps = {
  items: []
};
var _default = TreeTabs;
exports.default = _default;