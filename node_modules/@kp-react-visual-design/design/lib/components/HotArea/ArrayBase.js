"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _utils = require("@kp-react-visual-design/utils");

var _react2 = require("@formily/react");

var _icons = require("@ant-design/icons");

var _excluded = ["children"];

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ArrayBaseContext = /*#__PURE__*/(0, _react.createContext)(null);
var ItemContext = /*#__PURE__*/(0, _react.createContext)(null);

var ArrayBase = function ArrayBase(_ref) {
  var children = _ref.children;
  var field = (0, _react2.useField)();
  var schema = (0, _react2.useFieldSchema)();
  return /*#__PURE__*/_react.default.createElement(ArrayBaseContext.Provider, {
    value: {
      field: field,
      schema: schema
    }
  }, children);
};

var Item = function Item(_ref2) {
  var children = _ref2.children,
      props = _objectWithoutProperties(_ref2, _excluded);

  return /*#__PURE__*/_react.default.createElement(ItemContext.Provider, {
    value: props
  }, children);
};

var Remove = function Remove() {
  var self = (0, _react2.useField)();
  var array = (0, _react.useContext)(ArrayBaseContext);
  var item = (0, _react.useContext)(ItemContext);
  return /*#__PURE__*/_react.default.createElement(_icons.DeleteOutlined, {
    onClick: function onClick(e) {
      var _array$field, _array$field$remove;

      if (self === null || self === void 0 ? void 0 : self.disabled) return;
      e.stopPropagation();
      array === null || array === void 0 ? void 0 : (_array$field = array.field) === null || _array$field === void 0 ? void 0 : (_array$field$remove = _array$field.remove) === null || _array$field$remove === void 0 ? void 0 : _array$field$remove.call(_array$field, item.index);
    }
  });
};

var Index = function Index() {
  return /*#__PURE__*/_react.default.createElement("span", null);
};

var mixin = function mixin(target) {
  target.Index = Index;
  target.Remove = Remove;
  return target;
};

var _default = (0, _utils.attachPropertiesToComponent)(ArrayBase, {
  Item: Item,
  mixin: mixin
});

exports.default = _default;