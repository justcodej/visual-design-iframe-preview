"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _iframeResizerReact = _interopRequireDefault(require("@kp-react-visual-design/iframe-resizer-react"));

var _context = _interopRequireDefault(require("../context"));

var _consts = require("../../consts");

var _index = require("./index.styled");

var _customHooks = require("../../custom-hooks");

var _excluded = ["selectedList", "isDragging", "activeIndex", "refresh", "isPreviewing", "initialWidgets", "appCode", "isOnLoad", "loading"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var ComponentTreeWidget = function ComponentTreeWidget() {
  var _useContext = (0, _react.useContext)(_context.default),
      selectedList = _useContext.selectedList,
      isDragging = _useContext.isDragging,
      activeIndex = _useContext.activeIndex,
      refresh = _useContext.refresh,
      isPreviewing = _useContext.isPreviewing,
      initialWidgets = _useContext.initialWidgets,
      appCode = _useContext.appCode,
      isOnLoad = _useContext.isOnLoad,
      loading = _useContext.loading,
      rest = _objectWithoutProperties(_useContext, _excluded);

  var iframeRef = (0, _react.useRef)(null);

  var onMessage = function onMessage(dataMessage) {
    var _rest$dataMessage$mes;

    (_rest$dataMessage$mes = rest[dataMessage.message.method]) === null || _rest$dataMessage$mes === void 0 ? void 0 : _rest$dataMessage$mes.call(rest, dataMessage.message.data);
  };

  (0, _customHooks.useDeepEffect)(function () {
    var _iframeRef$current;

    if (!isOnLoad) return;
    var postMessageData = {
      selectedList: selectedList,
      isDragging: isDragging,
      activeIndex: activeIndex,
      isPreviewing: isPreviewing,
      initialWidgets: initialWidgets,
      appCode: appCode
    };
    iframeRef === null || iframeRef === void 0 ? void 0 : (_iframeRef$current = iframeRef.current) === null || _iframeRef$current === void 0 ? void 0 : _iframeRef$current.sendMessage(postMessageData);
  }, [selectedList, isDragging, activeIndex, isPreviewing, initialWidgets, appCode, isOnLoad]);
  (0, _react.useEffect)(function () {
    var iframeDOM = document.querySelector('iframe');
    iframeDOM === null || iframeDOM === void 0 ? void 0 : iframeDOM.addEventListener('load', function () {
      return rest.onChangeState({
        isOnLoad: true
      });
    }, false);
    return function () {
      iframeDOM === null || iframeDOM === void 0 ? void 0 : iframeDOM.removeEventListener('load', function () {
        return rest.onChangeState({
          isOnLoad: false
        });
      });
    };
  }, []);
  return /*#__PURE__*/_react.default.createElement(_index.Wrapper, null, /*#__PURE__*/_react.default.createElement(_iframeResizerReact.default, {
    forwardRef: iframeRef,
    heightCalculationMethod: "bodyScroll",
    checkOrigin: false,
    src: _consts.iframeURL,
    width: 375,
    frameBorder: "0",
    minHeight: 667,
    onMessage: onMessage
  }));
};

var _default = ComponentTreeWidget;
exports.default = _default;